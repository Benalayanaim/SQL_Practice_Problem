/*Explanation 
there many questions i asked hima and give me a good explanation */

"""open this link for Chatgpt mte3ii """
#https://chatgpt.com/c/6787c887-4034-800f-bf99-f82bcd691a50

"the IDE online"
/*https://sqliteonline.com/*/


/****************************************************************************************************************************/

/****************************************************************************************************************************/

#Problem 1
#https://github.com/mrinal1704/SQL-Leetcode-Challenge/blob/master/Medium/Get%20highest%20answer%20rate%20question.sql
#https://www.youtube.com/watch?v=8pa7UPezd5w
#https://leetcode.ca/2017-06-30-578-Get-Highest-Answer-Rate-Question/


----create the schema for this table :
CREATE TYPE action_enum
AS
ENUM('show', 'answer', 'skip');

CREATE TABLE SurveyLog (
    id INT,
    action action_enum,
    question_id INT,
    answer_id INT,
    q_num INT,
    timestamp INT
);

    
/**solution 1**/ 
WITH QuestionStats AS (
    SELECT 
        question_id,
        SUM(CASE WHEN action = 'answer' THEN 1 ELSE 0 END) AS answered_count,
        SUM(CASE WHEN action = 'show' THEN 1 ELSE 0 END) AS showed_count
    FROM 
        SurveyLog
    GROUP BY 
        question_id
),
AnswerRates AS (
    SELECT 
        question_id,
        answered_count * 1.0 / showed_count AS answer_rate
    FROM 
        QuestionStats
    WHERE 
        showed_count > 0
)
SELECT 
    question_id
FROM 
    AnswerRates
ORDER BY 
    answer_rate DESC,
    question_id ASC
LIMIT 1;


-- Solution 2: 
WITH QuestionStats AS (
    SELECT
        question_id,
        COUNT(*) FILTER (WHERE action = 'show') AS shows,
        COUNT(*) FILTER (WHERE action = 'answer') AS answers
    FROM SurveyLog
    GROUP BY question_id
),
AnswerRates AS (
    SELECT
        question_id,
        answers * 1.0 / shows AS answer_rate
    FROM QuestionStats
    WHERE shows > 0
)
SELECT question_id
FROM AnswerRates
ORDER BY answer_rate DESC, question_id ASC
LIMIT 1;


/*Solution 3*/
SELECT question_id AS survey_log
FROM SurveyLog
GROUP BY question_id
ORDER BY SUM(CASE WHEN action = 'answer' THEN 1 ELSE 0 END) * 1.0 / 
         NULLIF(SUM(CASE WHEN action = 'show' THEN 1 ELSE 0 END), 0) DESC,
         question_id
LIMIT 1;

"Resource NullIF"
--https://neon.tech/postgresql/postgresql-tutorial/postgresql-nullif

/*Solution 4*/
WITH T AS (
        SELECT
            question_id AS survey_log,
            (SUM(CASE WHEN action = 'answer' THEN 1 ELSE 0 END) OVER (PARTITION BY question_id)) * 1.0 / 
            NULLIF(SUM(CASE WHEN action = 'show' THEN 1 ELSE 0 END) OVER (PARTITION BY question_id), 0) AS ratio
        FROM SurveyLog
    )
SELECT survey_log
FROM T
ORDER BY ratio DESC, survey_log
LIMIT 1;

/****************************************************************************************************************************/

/****************************************************************************************************************************/
